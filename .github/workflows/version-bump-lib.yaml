name: Version Bump (Library)

on:
  push:
    branches: [master]
    paths:
      - "lib/**"

permissions:
  contents: write  # default token can push tags outside workflow files

jobs:
  bump:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0  # fetch all tags

      - name: Extract last non-merge commit message in lib/
        id: commit
        run: |
          COMMIT_MSG=$(git log --no-merges -1 --pretty=%s -- lib)
          echo "message=$COMMIT_MSG" >> $GITHUB_OUTPUT

      - name: Skip version bump for docs/test/Merge
        if: startsWith(steps.commit.outputs.message, 'docs') || startsWith(steps.commit.outputs.message, 'test') || startsWith(steps.commit.outputs.message, 'Merge')
        run: echo "Skipping version bump for docs/test/Merge commit" && exit 0

      - name: Get latest library tag
        id: version
        run: |
          git fetch --tags
          latest=$(git tag --sort=-v:refname | grep -E '^lib/v[0-9]+\.[0-9]+\.[0-9]+$' | head -n 1)
          latest=${latest#lib/v}
          latest=${latest:-0.0.0}
          echo "latest=$latest" >> $GITHUB_OUTPUT
          echo "Latest lib tag: $latest"

      - name: Calculate next library version
        id: semver
        run: |
          IFS='.' read -r major minor patch <<< "${{ steps.version.outputs.latest }}"
          raw="${{ steps.commit.outputs.message }}"
          prefix=$(echo "$raw" | sed -E 's/^([a-zA-Z]+)(\(.+\))?:.*/\1/')
          echo "Detected prefix: $prefix"

          case "$prefix" in
            epic|major) major=$((major + 1)); minor=0; patch=0 ;;
            feat) minor=$((minor + 1)); patch=0 ;;
            fix|build|chore|perf|refactor|revert|style|cicd) patch=$((patch + 1)) ;;
            docs|test|Merge) echo "No version bump"; exit 0 ;;
            *) echo "Invalid commit prefix"; exit 1 ;;
          esac

          new_version="$major.$minor.$patch"
          echo "version=$new_version" >> $GITHUB_OUTPUT
          echo "Next lib version: $new_version"

      - name: Tag library commit (with lib/ prefix)
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          # Get latest commit touching lib/
          commit=$(git log -n 1 --pretty=format:%H -- lib)
          tag="lib/v${{ steps.semver.outputs.version }}"
          git tag "$tag" "$commit"
          git push origin "$tag"
          echo "Tagged lib/ commit with $tag"
